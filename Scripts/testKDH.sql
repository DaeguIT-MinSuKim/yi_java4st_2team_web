SELECT * FROM CAR;
SELECT * FROM MEMBER;
SELECT * FROM ADMIN;
SELECT * FROM RENT;
SELECT * FROM INSURANCE;
SELECT * FROM LONGRENT;
SELECT * FROM OPTIONS;
SELECT * FROM KIND;
SELECT * FROM EVENT;
SELECT * FROM BRAND;
SELECT * FROM EVENT_BOX;
SELECT * FROM OPT_BOX;
--조회----------------------------------------------------------------------------------------------------------------------------------------------------------
SELECT * FROM KIND
ORDER BY KIND_CODE ;


-- 한 회원에 대한 할인쿠폰 조회
SELECT E.NAME, E.SALE
FROM EVENT_BOX B, EVENT E
WHERE B.IS_EVENT = 'n' AND B.ID = 'dong' AND B.EVENT_CODE = E.EVENT_CODE;


SELECT COUNT(*) FROM OPTIONS;

SELECT E.NAME, E.SALE FROM EVENT_BOX B, EVENT E WHERE B.IS_EVENT = 'n' AND B.ID = 'dong' AND B.EVENT_CODE = E.EVENT_CODE;
SELECT * FROM CAR WHERE CAR_NO = '11하0123';

INSERT INTO RENT(ID, CAR_NO, INS_CODE, RENT_DATE, RETURN_DATE, IS_RENT, RENT_FARE, RENT_REMARK) 
values('dong', '11하0123', NULL, to_date('2020-11-10','YYYY-MM-DD HH24:MI:SS'), 
to_date('2020-11-12','YYYY-MM-DD HH24:MI:SS'), 'y', 80000, '동동 렌트 테스트');

SELECT * FROM KIND;

SELECT * FROM INSURANCE
ORDER BY INS_CODE;

SELECT * FROM OPTIONS;
SELECT * FROM OPTIONS ORDER BY OPT_CODE;

SELECT min(return_date) FROM RENT WHERE CAR_NO = '11하0123';

-- 단기렌트 조회
SELECT * FROM Rent r LEFT OUTER JOIN MEMBER m ON r.ID = m.ID JOIN INSURANCE i ON r.INS_CODE = i.INS_CODE
JOIN car c ON r.CAR_NO = c.CAR_NO LEFT OUTER join kind k ON c.KIND_CODE = k.KIND_CODE JOIN BRAND b ON c.BRAND_CODE = b.BRAND_CODE;

-- 단기렌트 조회 + 검색
SELECT * FROM Rent r LEFT OUTER JOIN MEMBER m ON r.ID = m.ID JOIN INSURANCE i ON r.INS_CODE = i.INS_CODE
JOIN car c ON r.CAR_NO = c.CAR_NO LEFT OUTER join kind k ON c.KIND_CODE = k.KIND_CODE JOIN BRAND b ON c.BRAND_CODE = b.BRAND_CODE
WHERE c.car_name LIKE '%모%';

-- 페이징용 카운팅
SELECT count(*) FROM Rent r LEFT OUTER JOIN MEMBER m ON r.ID = m.ID JOIN INSURANCE i ON r.INS_CODE = i.INS_CODE
JOIN car c ON r.CAR_NO = c.CAR_NO LEFT OUTER join kind k ON c.KIND_CODE = k.KIND_CODE JOIN BRAND b ON c.BRAND_CODE = b.BRAND_CODE;

-- 페이징
SELECT * FROM (SELECT rownum RN, a.* FROM (SELECT * FROM Rent r LEFT OUTER JOIN MEMBER m ON r.ID = m.ID JOIN INSURANCE i ON r.INS_CODE = i.INS_CODE
	JOIN car c ON r.CAR_NO = c.CAR_NO LEFT OUTER join kind k ON c.KIND_CODE = k.KIND_CODE JOIN BRAND b ON c.BRAND_CODE = b.BRAND_CODE) a) WHERE RN BETWEEN 1 AND 10 ORDER BY RN;
				
-- 검색 + 페이징
SELECT * FROM (SELECT rownum RN, a.* FROM (SELECT * FROM Rent r LEFT OUTER JOIN MEMBER m ON r.ID = m.ID JOIN INSURANCE i ON r.INS_CODE = i.INS_CODE
JOIN car c ON r.CAR_NO = c.CAR_NO LEFT OUTER join kind k ON c.KIND_CODE = k.KIND_CODE JOIN BRAND b ON c.BRAND_CODE = b.BRAND_CODE WHERE C.CAR_NO LIKE '%11%') a) WHERE RN BETWEEN 1 AND 5
ORDER BY RN;

-- WHERE R.ID LIKE '%kim%') a) WHERE RN BETWEEN 1 AND 5


SELECT * FROM (SELECT rownum RN, a.* FROM (SELECT * FROM Rent r LEFT OUTER JOIN MEMBER m ON r.ID = m.ID JOIN INSURANCE i ON r.INS_CODE = i.INS_CODE  
				JOIN car c ON r.CAR_NO = c.CAR_NO LEFT OUTER join kind k ON c.KIND_CODE = k.KIND_CODE JOIN BRAND b ON c.BRAND_CODE = b.BRAND_CODE) a) WHERE RN BETWEEN 1 AND 13 ORDER BY RN;
				
SELECT * FROM OPT_BOX;
SELECT * FROM RENT;

-- 가장 최근에 INSERT한 값 조회 (예약하기)
SELECT MAX(TO_NUMBER(RENT_NO)) AS RENT_NO FROM RENT;

-- EVENT_BOX UPDATE
SELECT * FROM EVENT_BOX eb ;
UPDATE EVENT_BOX 
SET IS_EVENT = 'y'
WHERE ID = 'dong' AND event_code = 3;


SELECT E.EVENT_CODE, E.NAME, E.SALE
FROM EVENT_BOX B, EVENT E 
WHERE B.IS_EVENT = 'n' AND B.ID = 'dong' AND B.EVENT_CODE = E.EVENT_CODE;


UPDATE EVENT_BOX SET IS_EVENT = 'n' WHERE EVENT_CODE = 22 AND ID = 'dong';
SELECT * FROM EVENT_BOX eb ;

SELECT EVENT_CODE, NAME, SALE, THUM_IMAGE, VIEW_IMAGE, IS_EVENT FROM EVENT ORDER BY TO_NUMBER(EVENT_CODE) DESC;

INSERT INTO OPT_BOX(OPT_CODE, RENT_NO) VALUES (?, ?);

SELECT * FROM OPT_BOX;

-- 단기렌트 -> 가장 최근에  예약완료한 정보
SELECT  FROM RENT
WHERE ID = 'dong' AND car_no = '11하6789' AND RENT_NO = (
	SELECT MAX(TO_NUMBER(RENT_NO)) AS RENT_NO FROM RENT 
	WHERE ID = 'dong' AND car_no = '11하6789'	
);

-- 단기렌트 -> 가장 최근에 예약 완료한 정보의 RENT_NO만 뽑아오기
SELECT * FROM( SELECT * FROM Rent r LEFT OUTER JOIN MEMBER m ON r.ID = m.ID JOIN INSURANCE i ON r.INS_CODE = i.INS_CODE
JOIN car c ON r.CAR_NO = c.CAR_NO LEFT OUTER join kind k ON c.KIND_CODE = k.KIND_CODE JOIN BRAND b ON c.BRAND_CODE = b.BRAND_CODE
WHERE M.ID = 'dong' AND c.CAR_NO = '11하1234' ORDER BY TO_NUMBER(RENT_NO) DESC) WHERE ROWNUM = 1;


SELECT * FROM RENT;
SELECT * FROM rent WHERE rent_no = 86;
SELECT EVENT_BOX, EVENT_CODE, ID, IS_EVENT FROM EVENT_BOX;
SELECT EVENT_BOX, EVENT_CODE, ID, IS_EVENT FROM EVENT_BOX WHERE EVENT_CODE = 1 AND ID = 'dong';

SELECT * FROM OPT_BOX WHERE RENT_NO = 74;
SELECT * FROM OPTIONS;

SELECT O.NAME FROM OPT_BOX B, OPTIONS O
WHERE B.OPT_CODE = O.OPT_CODE AND RENT_NO = 74;

SELECT * FROM EVENT;
SELECT * FROM EVENT_BOX WHERE EVENT_CODE = 23 AND ID = 'dong';

SELECT EVENT_BOX, EVENT_CODE, ID, IS_EVENT FROM EVENT_BOX;

SELECT EVENT_CODE, NAME, SALE, THUM_IMAGE, VIEW_IMAGE, START_DATE, END_DATE, IS_EVENT FROM EVENT ORDER BY TO_NUMBER(EVENT_CODE) DESC;

SELECT EVENT_CODE, NAME, SALE, THUM_IMAGE, VIEW_IMAGE, START_DATE, END_DATE, IS_EVENT FROM EVENT WHERE EVENT_CODE = 1;

SELECT LENGTH('김대현김김') FROM DUAL;

SELECT * FROM Rent r
LEFT OUTER JOIN MEMBER m ON r.ID = m.ID JOIN INSURANCE i ON r.INS_CODE = i.INS_CODE JOIN car c ON r.CAR_NO = c.CAR_NO 
LEFT OUTER JOIN kind k ON c.KIND_CODE = k.KIND_CODE JOIN BRAND b ON c.BRAND_CODE = b.BRAND_CODE
WHERE r.id = 'dong';

SELECT * FROM "OPTIONS";
SELECT * FROM EVENT e;

SELECT * FROM OPT_BOX B, OPTIONS O WHERE B.OPT_CODE = O.OPT_CODE;

DELETE FROM RENT WHERE RENT_NO = 17;

SELECT * FROM RENT;


INSERT INTO OPT_BOX(OPT_CODE, RENT_NO) VALUES (1, 2);

SELECT * FROM (SELECT rownum RN, a.* FROM (SELECT * FROM OPTIONS ORDER BY OPT_CODE DESC) a) WHERE RN BETWEEN 1 AND 10 ORDER BY RN;

DELETE FROM OPTIONS WHERE OPT_CODE = 8;
